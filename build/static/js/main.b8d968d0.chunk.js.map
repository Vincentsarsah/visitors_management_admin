{"version":3,"sources":["components/ContactForm.js","firebase.js","components/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","props","initialFieldValues","fullName","mobile","email","company","useState","values","setValues","useEffect","currentId","contactObjects","handleInputChange","e","target","name","value","autoComplete","onSubmit","preventDefault","addOrEdit","className","placeholder","onChange","type","fireDb","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ref","Contacts","setCurrentId","setContactObjects","firebaseDb","child","on","snapshot","val","obj","push","err","console","log","set","Object","keys","map","key","onClick","id","window","confirm","remove","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8d968d0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ContactForm = (props) => {\r\n    const initialFieldValues = {\r\n        fullName: '',\r\n        mobile: '',\r\n        email: '',\r\n        company: ''\r\n    }\r\n\r\n    var [values, setValues] = useState(initialFieldValues)\r\n\r\n    useEffect(() => {\r\n        if (props.currentId == '')\r\n            setValues({ ...initialFieldValues })\r\n        else\r\n            setValues({\r\n                ...props.contactObjects[props.currentId]\r\n            })\r\n    }, [props.currentId, props.contactObjects])\r\n\r\n    const handleInputChange = e => {\r\n        var { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault()\r\n        props.addOrEdit(values);\r\n    }\r\n\r\n    return (\r\n        <form autoComplete=\"off\" onSubmit={handleFormSubmit}>\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">\r\n                        <i className=\"fas fa-user\"></i>\r\n                    </div>\r\n                </div>\r\n                <input className=\"form-control\" name=\"fullName\" placeholder=\"Full Name\"\r\n                    value={values.fullName}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-mobile-alt\"></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input className=\"form-control\" name=\"mobile\" placeholder=\"Mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-envelope\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"form-control\" name=\"email\" placeholder=\"Email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-building\"></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input className=\"form-control\" name=\"company\" placeholder=\"Company\"\r\n                        value={values.company}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"submit\" value={props.currentId == \"\" ? \"Save\" : \"Update\"} className=\"btn btn-primary btn-block\" />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ContactForm;","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDEX-Hym5hbr55Pqvgj81ro-SgCLo99PmI\",\r\n    authDomain: \"visitors-app-7b543.firebaseapp.com\",\r\n    databaseURL: \"https://visitors-app-7b543-default-rtdb.firebaseio.com\",\r\n    projectId: \"visitors-app-7b543\",\r\n    storageBucket: \"visitors-app-7b543.appspot.com\",\r\n    messagingSenderId: \"15687979725\",\r\n    appId: \"1:15687979725:web:82dee0c9e9520145238f84\",\r\n    measurementId: \"G-F65YJ5Z3T7\"\r\n};\r\n\r\nvar fireDb = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default fireDb.database().ref();\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport ContactForm from \"./ContactForm\";\r\nimport firebaseDb from \"../firebase\";\r\n\r\nconst Contacts = () => {\r\n\r\n\tvar [currentId, setCurrentId] = useState('');\r\n    var [contactObjects, setContactObjects] = useState({})\r\n\r\n    useEffect(() => {\r\n        firebaseDb.child('contacts').on('value', snapshot => {\r\n            if (snapshot.val() != null) {\r\n                setContactObjects({\r\n                    ...snapshot.val()\r\n                });\r\n            }\r\n        })\r\n    }, [])\r\n\r\n        const addOrEdit = (obj) => {\r\n            if (currentId == '')\r\n                firebaseDb.child('contacts').push(\r\n                    obj,\r\n                    err => {\r\n                        if (err)\r\n                            console.log(err)\r\n                        else\r\n                            setCurrentId('')\r\n                    })\r\n            else\r\n                firebaseDb.child(`contacts/${currentId}`).set(\r\n                    obj,\r\n                    err => {\r\n                        if (err)\r\n                            console.log(err)\r\n                        else\r\n                            setCurrentId('')\r\n                    })\r\n        }\r\n    \r\n\r\n        const onDelete = id => {\r\n            if (window.confirm('Are you sure to delete this record?')) {\r\n                firebaseDb.child(`contacts/${id}`).remove(\r\n                    err => {\r\n                        if (err)\r\n                            console.log(err)\r\n                        else\r\n                            setCurrentId('')\r\n                    })\r\n            }\r\n        }\r\n\r\n  return (\r\n        <>\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4 text-center\">Visitors Manager</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                    <ContactForm {...({ currentId, contactObjects, addOrEdit })} ></ContactForm>\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                    <table className=\"table table-borderless table-stripped\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Mobile</th>\r\n                                <th>Email</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                Object.keys(contactObjects).map((key) => (\r\n                                    <tr key={key}>\r\n                                        <td>{contactObjects[key].fullName}</td>\r\n                                        <td>{contactObjects[key].mobile}</td>\r\n                                        <td>{contactObjects[key].email}</td>\r\n                                        <td className=\"bg-light\">\r\n                                            <a className=\"btn text-primary\" onClick={() => { setCurrentId(key) }}>\r\n                                                <i className=\"fas fa-pencil-alt\"></i>\r\n                                            </a>\r\n                                            <a className=\"btn text-danger\" onClick={() => { onDelete(key) }}>\r\n                                                <i className=\"far fa-trash-alt\"></i>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\nimport './App.css';\nimport Contacts from './components/Contacts';\n\n\nfunction App() {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-8 offset-md-2\">\n      <Contacts ></Contacts>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}